// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "@rescript/std/lib/es6/caml_obj.js";
import * as Belt_Array from "@rescript/std/lib/es6/belt_Array.js";
import * as Belt_Option from "@rescript/std/lib/es6/belt_Option.js";
import * as Caml_option from "@rescript/std/lib/es6/caml_option.js";

function flatMap(array, fn) {
  return Belt_Array.concatMany(Belt_Array.map(array, fn));
}

function takeFirstWithDefault(iterable, $$default) {
  var x = Belt_Array.get(iterable, 0);
  if (x !== undefined) {
    return Caml_option.valFromOption(x);
  } else {
    return $$default;
  }
}

function everyO(iterable) {
  if (Belt_Array.every(iterable, Belt_Option.isSome)) {
    return Belt_Array.map(iterable, Belt_Option.getExn);
  }
  
}

function take(iterable, indicies) {
  return everyO(Belt_Array.map(indicies, (function (index) {
                    return Belt_Array.get(iterable, index);
                  })));
}

function has(iterable, value) {
  return Belt_Array.some(iterable, (function (x) {
                return Caml_obj.caml_equal(x, value);
              }));
}

export {
  flatMap ,
  takeFirstWithDefault ,
  everyO ,
  take ,
  has ,
  
}
/* No side effect */
